(function(){var e={52:function(){},905:function(e,t,i){var r=i(52);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.id,r,""]]),r.locals&&(e.exports=r.locals),i(346).Z("b343ab88",r,!0,{})},346:function(e,t,i){"use strict";function r(e,t){for(var i=[],r={},n=0;n<t.length;n++){var a=t[n],s=a[0],o={id:e+":"+n,css:a[1],media:a[2],sourceMap:a[3]};r[s]?r[s].parts.push(o):i.push(r[s]={id:s,parts:[o]})}return i}i.d(t,{Z:function(){return w}});var n="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!n)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var a={},s=n&&(document.head||document.getElementsByTagName("head")[0]),o=null,l=0,c=!1,d=function(){},p=null,f="data-vue-ssr-id",u="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function w(e,t,i,n){c=i,p=n||{};var s=r(e,t);return h(s),function(t){for(var i=[],n=0;n<s.length;n++){var o=a[s[n].id];o.refs--,i.push(o)}t?h(s=r(e,t)):s=[];for(var n=0;n<i.length;n++){var o=i[n];if(0===o.refs){for(var l=0;l<o.parts.length;l++)o.parts[l]();delete a[o.id]}}}}function h(e){for(var t=0;t<e.length;t++){var i=e[t],r=a[i.id];if(r){r.refs++;for(var n=0;n<r.parts.length;n++)r.parts[n](i.parts[n]);for(;n<i.parts.length;n++)r.parts.push(m(i.parts[n]));r.parts.length>i.parts.length&&(r.parts.length=i.parts.length)}else{for(var s=[],n=0;n<i.parts.length;n++)s.push(m(i.parts[n]));a[i.id]={id:i.id,refs:1,parts:s}}}}function v(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function m(e){var t,i,r=document.querySelector("style["+f+'~="'+e.id+'"]');if(r){if(c)return d;r.parentNode.removeChild(r)}if(u){var n=l++;t=b.bind(null,r=o||(o=v()),n,!1),i=b.bind(null,r,n,!0)}else t=x.bind(null,r=v()),i=function(){r.parentNode.removeChild(r)};return t(e),function(r){r?(r.css!==e.css||r.media!==e.media||r.sourceMap!==e.sourceMap)&&t(e=r):i()}}var g=function(){var e=[];return function(t,i){return e[t]=i,e.filter(Boolean).join("\n")}}();function b(e,t,i,r){var n=i?"":r.css;if(e.styleSheet)e.styleSheet.cssText=g(t,n);else{var a=document.createTextNode(n),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(a,s[t]):e.appendChild(a)}}function x(e,t){var i=t.css,r=t.media,n=t.sourceMap;if(r&&e.setAttribute("media",r),p.ssrId&&e.setAttribute(f,t.id),n&&(i+="\n/*# sourceURL="+n.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}}},t={};function i(r){var n=t[r];if(void 0!==n)return n.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,i),a.exports}i.d=function(e,t){for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="bundles/twintpayment/",window?.__sw__?.assetPath&&(i.p=window.__sw__.assetPath+"/bundles/twintpayment/"),function(){"use strict";var e=JSON.parse('{"twint":{"validation":{"errorTitle":"TWINT payment validation error","errorMessage":"There was an error validating the TWINT certificate (selected file and password). Please try again or use a different certification."},"certificateSuccess":"Certificate is an valid TWINT certificate.","certificateLabel":"Certificate Password (optional)","certificatePasswordHelpText":"The password for the certificate file is optional. If you have set a password for the certificate file, please enter it here.","certificateFileLabel":"Select a certificate file (.p12)"}}'),t=JSON.parse('{"twint":{"validation":{"errorTitle":"TWINT payment validation error","errorMessage":"There was an error validating the TWINT certificate (selected file and password). Please try again or use a different certification."},"certificateSuccess":"Certificate is an valid TWINT certificate.","certificateLabel":"Certificate Password (optional)","certificateFileLabel":"Select a certificate file (.p12)","certificatePasswordHelpText":"The password for the certificate file is optional. If you have set a password for the certificate file, please enter it here."}}');Shopware.Locale.extend("de-DE",e),Shopware.Locale.extend("en-GB",t);let r=Shopware.Classes.ApiService;class n extends r{constructor(e,t,i="twint"){super(e,t,i)}uploadFile(e,t){let i=this.getBasicHeaders();i["Content-Type"]="multipart/form-data";let r=new FormData;return r.append("file",e),r.append("password",t),this.httpClient.post("_actions/twint/extract-pem",r,{headers:i})}}let{Application:a}=Shopware;a.addServiceProvider("twintFileUploadService",()=>new n(Shopware.Application.getContainer("init").httpClient,Shopware.Service("loginService"))),i(905);let{Component:s,Mixin:o}=Shopware;s.register("twint-certificate",{template:Shopware.Feature.isActive("v6.6.0.0")?'{% block twint_certificate_block %}\n    <div>\n        <sw-file-input\n            v-model="currentCertFile"\n            :allowed-mime-types="[\'application/x-pkcs12\']"\n            :maxFileSize="8*1024*1024"\n            @update:value="onFileChange"\n            required\n        >\n            <template #caption-label>\n                {{ $tc(\'twint.certificateFileLabel\') }}\n            </template>\n        </sw-file-input>\n\n        <sw-password-field\n                v-model:value="currentPassword"\n                :entity-collection="null"\n                class="twint-config-field"\n                :label="$tc(\'twint.certificateLabel\')"\n                :help-text="$tc(\'twint.certificatePasswordHelpText\')"\n                @blur="updatePassword">\n            <template #suffix>\n                {% block twint_certificate_password_suffix_block %}\n                    <sw-icon name="regular-low-vision" size="22px"></sw-icon>\n                {% endblock %}\n            </template>\n        </sw-password-field>\n    </div>\n{% endblock %}\n':'{% block twint_certificate_block %}\n    <div>\n        <sw-file-input\n            v-model="currentCertFile"\n            :allowed-mime-types="[\'application/x-pkcs12\']"\n            :maxFileSize="8*1024*1024"\n            @change="onFileChange"\n            required\n        >\n            <template #caption-label>\n                {{ $tc(\'twint.certificateFileLabel\') }}\n            </template>\n        </sw-file-input>\n\n        <sw-password-field\n                v-model:value="currentPassword"\n                :entity-collection="null"\n                class="twint-config-field"\n                :label="$tc(\'twint.certificateLabel\')"\n                :help-text="$tc(\'twint.certificatePasswordHelpText\')"\n                @blur="updatePassword">\n            <template #suffix>\n                {% block twint_certificate_password_suffix_block %}\n                    <sw-icon name="regular-low-vision" size="22px"></sw-icon>\n                {% endblock %}\n            </template>\n        </sw-password-field>\n    </div>\n{% endblock %}\n',mixins:[o.getByName("notification")],inject:["feature"],data(){return{currentPassword:null,currentCertFile:null}},methods:{onFileChange(e){this.currentCertFile=e,this.extractPem()},updatePassword(e){this.extractPem()},extractPem(){let e=Shopware.Service("twintFileUploadService");this.currentCertFile&&e.uploadFile(this.currentCertFile,this.currentPassword??"").then(e=>{this.updateCertificate(e.data.data),this.createNotification({title:"Success",message:this.$tc("twint.certificateSuccess"),growl:!0}).then(e=>{})}).catch(e=>{this.createNotificationError({title:this.$tc("twint.validation.errorTitle"),message:this.$tc("twint.validation.errorMessage"),growl:!0})})},updateCertificate(e){if(this.feature.isActive("v6.6.0.0")){this.$emit("update:value",e);return}this.$emit("input",e)}}})}()})();